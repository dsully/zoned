[package]
description = "Update Cloudflare DNS with IPv6 addresses"
edition = "2021"
homepage = "https://github.com/dsully/zoned"
name = "zoned"
repository = "https://github.com/dsully/zoned"
version = "0.1.2"

[[bin]]
name = "zoned"
path = "main.rs"

[profile.release]
incremental = true
lto = true
opt-level = 3

[profile.dev]
debug = 1
incremental = true
lto = "off"

  [profile.dev.package."*"]
  opt-level = 3

[profile.dist]
inherits = "release"
lto = "thin"

[dependencies]
anyhow = "1.0.95"
clap = { version = "4", default-features = false, features = [
  "derive",
  "help",
  "std",
  "usage",
] }
clap-verbosity-flag = "3.0.2"
cloudflare = { git = "https://github.com/cloudflare/cloudflare-rs", rev = "f14720e4" }
config = { version = "0.15.4", default-features = false, features = [ "toml" ] }
local-ip-address = "0.6.3"
netdev = "0.32"
reqwest = { version = "0.12.12", features = [ "json" ] }
serde = "1"
serde_json = "1"
thiserror = "2"
tokio = { version = "1.43.0", features = [
  "macros",
  "net",
  "rt-multi-thread",
] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = [ "env-filter" ] }
xdg = "2.5.2"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.18.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = [ "homebrew" ]
# A GitHub repo to push Homebrew formulas to
tap = "dsully/homebrew-tap"
# Target platforms to build apps for (Rust target-triple syntax)
targets = [ "aarch64-apple-darwin", "x86_64-unknown-linux-gnu" ]
# Publish jobs to run in CI
publish-jobs = [ "homebrew" ]
# Publish jobs to run in CI
pr-run-mode = "plan"

  # Use Apple Silicon runners.
  [workspace.metadata.dist.github-custom-runners]
  aarch64-apple-darwin = "macos-14"

[lints.rust]
rust_2018_idioms = { level = "deny", priority = -1 }

# https://stackoverflow.com/a/74545562/81120
[lints.clippy]
all = { level = "deny", priority = -1 }
complexity = { level = "deny", priority = -1 }
correctness = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
style = { level = "deny", priority = -1 }
suspicious = { level = "deny", priority = -1 }

# Allowed lints
cargo_common_metadata = { level = "allow", priority = 1 }
doc_markdown = { level = "allow", priority = 1 }
implicit_return = { level = "allow", priority = 1 }
missing_errors_doc = { level = "allow", priority = 1 }
missing_panics_doc = { level = "allow", priority = 1 }
module_name_repetitions = { level = "allow", priority = 1 }

# Warn-level lints
await_holding_lock = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_ok_or = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_on_vec_items = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
single_match_else = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
trait_duplication_in_bounds = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
zero_sized_map_values = "warn"
